// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// users table
model User {
  id        String   @id @default(uuid()) @map("id")
  email     String   @unique              @map("email")
  password  String   @map("password")
  fullname  String   @map("fullname")
  createdAt DateTime @default(now())      @map("createdAt")
  updatedAt DateTime @updatedAt           @map("updatedAt")

  @@map("user")
}

// recipes table
model Recipe {
  id          String   @id @default(uuid()) @map("id")
  userId      String   @map("userid")
  title       String   @map("title")
  description String?  @map("description")
  imageUrl    String?  @map("imageurl")
  prepTime    Int?     @map("preptime")
  cookTime    Int?     @map("cooktime")
  servings    Int?     @map("servings")
  createdAt   DateTime @default(now()) @map("createdAt")
  updatedAt   DateTime @updatedAt      @map("updatedAt")

  @@map("recipe")
}

// ingredients table
model Ingredient {
  id        String   @id @default(uuid()) @map("id")
  recipeId  String   @map("recipeid")
  name      String   @map("name")
  quantity  String   @map("quantity")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt      @map("updatedAt")

  @@map("ingredient")
}

// instructions table
model Instruction {
  id         String   @id @default(uuid()) @map("id")
  recipeId   String   @map("recipeid")
  stepNumber Int      @map("stepnumber")
  description String  @map("description")
  createdAt  DateTime @default(now()) @map("createdAt")
  updatedAt  DateTime @updatedAt      @map("updatedAt")

  @@map("instruction")
}

// ratings table
model Rating {
  id        String   @id @default(uuid()) @map("id")
  recipeId  String   @map("recipeid")
  userId    String   @map("userid")
  rating    Int      @map("rating")
  createdAt DateTime @default(now()) @map("createdAt")

  @@unique([recipeId, userId])
  @@map("rating")
}

// comments table
model Comment {
  id        String   @id @default(uuid()) @map("id")
  recipeId  String   @map("recipeid")
  userId    String   @map("userid")
  content   String   @map("content")
  createdAt DateTime @default(now()) @map("createdAt")
  updatedAt DateTime @updatedAt      @map("updatedAt")

  @@map("comment")
}

// follows table
model Follow {
  id          String   @id @default(uuid()) @map("id")
  followerId  String   @map("followerid")
  followingId String   @map("followingid")
  createdAt   DateTime @default(now()) @map("createdAt")

  @@unique([followerId, followingId])
  @@map("follow")
}
